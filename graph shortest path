#include <stdio.h>
#include <stdbool.h>

#define INF 9999
#define V 6

void dijkstra(int graph[V][V], int start) {
    int dist[V];
    bool visited[V];
    
    for (int i = 0; i < V; i++) {
        dist[i] = INF;
        visited[i] = false;
    }
    
    dist[start] = 0;
    
    for (int count = 0; count < V-1; count++) {
        int u, min = INF;
        
        for (int v = 0; v < V; v++)
            if (!visited[v] && dist[v] <= min)
                min = dist[v], u = v;
        
        visited[u] = true;
        
        for (int v = 0; v < V; v++)
            if (!visited[v] && graph[u][v] && dist[u] + graph[u][v] < dist[v])
                dist[v] = dist[u] + graph[u][v];
    }
    
    printf("Vertex \t Distance from Source\n");
    for (int i = 0; i < V; i++)
        printf("%d \t %d\n", i, dist[i]);
}

int main() {
    int graph[V][V] = {
        {0, 4, 0, 0, 0, 0},
        {4, 0, 8, 7, 0, 0},
        {0, 8, 0, 3, 6, 0},
        {0, 7, 3, 0, 5, 0},
        {0, 0, 6, 5, 0, 7},
        {0, 0, 0, 0, 7, 0}
    };
    
    dijkstra(graph, 0);
    
    return 0;
}
